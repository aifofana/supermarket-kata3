<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" ignored="0" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="533" started-at="2019-10-28T15:02:32 CET" finished-at="2019-10-28T15:02:32 CET">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="533" started-at="2019-10-28T15:02:32 CET" finished-at="2019-10-28T15:02:32 CET">
      <class name="fr.afo.supermarket.BasketProcessorTest">
        <test-method status="PASS" signature="shouldComputeAndOutputBasketPrice()" name="shouldComputeAndOutputBasketPrice" duration-ms="442" started-at="2019-10-28T15:02:32 CET" finished-at="2019-10-28T15:02:32 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldComputeAndOutputBasketPrice -->
      </class> <!-- fr.afo.supermarket.BasketProcessorTest -->
      <class name="fr.afo.supermarket.monTest">
        <test-method status="PASS" signature="test()" name="test" duration-ms="40" started-at="2019-10-28T15:02:32 CET" finished-at="2019-10-28T15:02:32 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- fr.afo.supermarket.monTest -->
      <class name="fr.afo.supermarket.OfferPocessorTest">
        <test-method status="SKIP" signature="shouldThrowExecption() throws java.lang.Exception" name="shouldThrowExecption" duration-ms="0" started-at="2019-10-28T15:02:32 CET" finished-at="2019-10-28T15:02:32 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldThrowExecption -->
        <test-method status="PASS" signature="shouldReturnThreeForTwoProcessor()" name="shouldReturnThreeForTwoProcessor" duration-ms="2" started-at="2019-10-28T15:02:32 CET" finished-at="2019-10-28T15:02:32 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnThreeForTwoProcessor -->
        <test-method status="PASS" signature="shouldReturnByOneGetOneProcessor()" name="shouldReturnByOneGetOneProcessor" duration-ms="3" started-at="2019-10-28T15:02:32 CET" finished-at="2019-10-28T15:02:32 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnByOneGetOneProcessor -->
      </class> <!-- fr.afo.supermarket.OfferPocessorTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
